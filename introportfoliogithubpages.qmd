---
title: "Crie seu portfolio numa Github Page"
format:
  html:
    self-contained: true
    toc: true
    code-fold: true
    df-print: paged
editor: visual
---

------------------------------------------------------------------------

<left> ![](https://raw.githubusercontent.com/profrhozon/site/main/logo_FAE.png){width="15%"} </left>

------------------------------------------------------------------------

# **1Ô∏è‚É£ Criar um reposit√≥rio no GitHub**

Antes de come√ßar, precisamos criar um reposit√≥rio no **GitHub**:

1.  **Acesse o GitHub** (<https://github.com/>) e fa√ßa login na sua conta.
2.  **Clique no bot√£o "New Repository"** para criar um novo reposit√≥rio.
3.  **Defina um nome para o reposit√≥rio** (exemplo: `portfolio`).
4.  **Defina o reposit√≥rio como p√∫blico** para que o GitHub Pages possa acess√°-lo.
5.  **‚ö†Ô∏è N√ÉO adicione `README.md`, `.gitignore` ou `LICENSE`**, pois isso pode causar conflitos pelo menos por agora.
6.  **Clique em "Create repository"** e copie a URL do reposit√≥rio para usarmos mais tarde.

# **2Ô∏è‚É£ Configurar o ambiente**

## **üîπ RStudio**

1.  **Abra o RStudio**.

2.  V√° para **File** \> **New Project** \> **New Directory** \> **Quarto Website**.

3.  Escolha um nome e um local para o projeto (local, OneDrive, Google Drive, ...) e marque as op√ß√µes **Create a git repository**, **Use renv with this project**

4.  Clique em **Create Project**.

5.  **Instale os pacotes necess√°rios** no console do RStudio: (opcional)

    ``` r
    install.packages("quarto")
    ```

6.  Edite o arquivo `quarto.yml` e da linha 1 a 3 copie e cole o codigo abaixo:

    ``` sh
    project:
      type: website
      output-dir: "."
    ```

7.  Para renderizar o site, rode:

    ``` r
    quarto::quarto_render()
    ```

    ou no Terminal execute

    ``` sh
    quarto render
    ```

    Ou simplesmente clique no bot√£o `Render` quando estiver com o arquivo index.qmd ou about.qmd abertos para visualizar um preview do site.

Obs.: Se encontrar alguma mensagem de erro como `- The project is out-of-sync -- use renv::status() for details.` em Background Jobs, no console do RStudio, digite:

``` r
renv::status()
```

Isso mostrar√° o que precisa ser atualizado.

Em seguida, para sincronizar pacotes, rode:

``` r
renv::restore()
```

Se quiser atualizar todos os pacotes:

``` r
renv::update()
```

Depois de resolver os problemas dos pacotes, tente renderizar o site no RStudio:

``` r
quarto::quarto_render()
```

## **üîπ Positron**

1.  **Baixe e instale o Positron**: <https://positron.dev/> ou em <https://github.com/posit-dev/positron>
2.  **File \> New File \> Quarto Project \> Website Project**.
3.  **Escolha o diret√≥rio onde pretende salvar o seu projeto, local, OneDrive, Google Drive...crie um nome pro seu subdir em `Project Directory Name`**
4.  **File \> Open Recent \> e abra o subdir que voc√™ acabou de criar**
5.  Note que vc ter√° no seu projeto os seguintes arquivos:

-   `_quarto.yml`
-   `about.qmd`
-   `index.qmd`
-   `styles.css`

6.  Edite o arquivo `quarto.yml` e da linha 1 a 3 copie e cole o codigo abaixo:

    ``` sh
    project:
      type: website
      output-dir: "."
    ```

7.  Abra qualquer um dos dois .qmd e execute ele clicando em `Preview` ou usando o atalho `CTRL+Shift+K` (Windows)

8.  **Renderize o site**:

    ``` sh
    quarto render
    ```

## **üîπ VSCode**

1.  **Baixe e instale o Quarto** se ainda n√£o tiver: <https://quarto.org/>

2.  **Abra a pasta do projeto** (`File > Open Folder`).

3.  **Instale a extens√£o do Quarto**:

    -   V√° em **Extensions** (Ctrl + Shift + X).
    -   Pesquise por "Quarto" e instale.

4.  Para renderizar o site, abra o **terminal** e rode:

    ``` sh
    quarto render
    ```

    Maiores infos podem ser obtidas nesse [link oficial do quarto.org](https://quarto.org/docs/get-started/hello/vscode.html) ou p. ex. nesse v√≠deo [aqui](https://www.youtube.com/watch?v=ynMsYWTCtKA&t=49s) e [aqui](https://www.youtube.com/watch?v=z9WmmoSV_T4)

# **3Ô∏è‚É£ Configurar o Git e conectar ao GitHub**

Agora, vamos configurar o **Git** para versionamento e conectar ao GitHub.

1.  **Abra o terminal** na sua IDE.

2.  **Inicialize o reposit√≥rio Git no projeto**:

    ``` sh
    git init
    ```

3.  **Conecte o reposit√≥rio local ao GitHub** (substitua `SEU-USUARIO` pelo seu nome no GitHub):

    ``` sh
    git remote add origin https://github.com/SEU-USUARIO/portfolio.git
    ```

4.  **Adicione todos os arquivos ao Git**:

    ``` sh
    git add .
    ```

5.  **Crie um commit inicial**:

    ``` sh
    git commit -m "Primeira vers√£o do portfolio ou site"
    ```

6.  **Defina a branch principal como `main`**:

    ``` sh
    git branch -M main
    ```

7.  **Envie os arquivos para o GitHub**:

    ``` sh
    git push -u origin main
    ```

# **4Ô∏è‚É£ Configurar o GitHub Pages**

Agora que os arquivos est√£o no GitHub, vamos ativar o **GitHub Pages**.

1.  **Acesse o reposit√≥rio no GitHub**.
2.  V√° at√© **Settings** \> **Pages**.
3.  **Em "Build and deployment"**, escolha "Deploy from a branch".
4.  **Selecione a branch `main` e defina `/ (root)` como diret√≥rio de origem**.
5.  **Clique em "Save"**.

Ap√≥s alguns minutos, seu site estar√° dispon√≠vel no link:

```         
https://SEU-USUARIO.github.io/portfolio/
```

# **5Ô∏è‚É£ Atualizar o site**

Se voc√™ quiser modificar o site/portfolio no futuro, basta seguir os passos abaixo para atualizar:

1.  **Edite os arquivos do site**.

2.  **No terminal, adicione as mudan√ßas ao Git**:

    ``` sh
    git add .
    ```

3.  **Crie um novo commit descrevendo as mudan√ßas**:

    ``` sh
    git commit -m "Atualiza√ß√£o do site"
    ```

4.  **Envie as altera√ß√µes para o GitHub**:

    ``` sh
    git push origin main
    ```

# **üéØ Conclus√£o**

Agora seu site est√° publicado no **GitHub Pages** e pronto para ser atualizado sempre que necess√°rio! üöÄ

Em seguida, recomendo que d√™ uma olhada no manual de refer√™ncia do Quarto visitando o site oficial:

-   <https://quarto.org/>

Aqui voc√™ pode encontrar dicas √∫teis de como editar seu .yml pro design que preferir:

-   <https://quarto.org/docs/websites/>

Caso queira seguir um v√≠deo tutorial simples que faz uso de um template pronto veja:

-   [How to create a web site using Quarto, RStudio, and GitHub Pages (w/ code template)](https://www.youtube.com/watch?v=YN75YXaLFGM&t=17s)

Ou ent√£o voc√™ poderia ver um bom v√≠deo tutorial de uso do Python no Quarto:

- [How to Build a Data Science Portfolio Website with Python & Quarto!](https://www.youtube.com/watch?v=TbegWSPETs0&t=1938s)





